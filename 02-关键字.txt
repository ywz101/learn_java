关键字:
abstract：用于声明抽象类或抽象方法。
assert：用于在调试期间进行条件检查。
boolean：布尔数据类型。
break：用于跳出循环或开关语句。
byte：字节数据类型。
case：用于开关语句中的分支。
catch：用于捕获异常。
char：字符数据类型。
class：用于声明类。
const：已经废弃，不再使用。 (重要, 可以少记一个)
continue：用于继续下一个循环迭代。
default：开关语句中的默认情况。
do：用于执行循环。
double：双精度浮点数数据类型。
else：条件语句中的另一种情况。
enum：枚举类型的声明。
extends：用于指定一个类是另一个类的子类。
final：用于修饰类、方法或变量，表示不可改变。
finally：用于定义在异常处理结束时必须执行的代码块。
float：单精度浮点数数据类型。
for：用于循环结构。
if：条件语句。
implements：用于实现接口的类。
import：用于导入包或类。
instanceof：用于测试对象是否为特定类的实例。
int：整数数据类型。
interface：接口声明。
long：长整型数据类型。
native：用于声明本地方法。
new：用于创建新的对象。
null：空引用。
package：用于定义Java包。
private：访问权限修饰符，表示私有的。
protected：访问权限修饰符，表示受保护的。
public：访问权限修饰符，表示公共的。
return：用于从方法返回值。
short：短整型数据类型。
static：静态修饰符，用于指定类、方法、变量等为静态的。
strictfp：用于确保浮点运算的结果是跨平台的。
super：用于引用超类的成员。
switch：开关语句。
synchronized：用于指定同步方法或同步块。
this：当前对象的引用。
throw：用于抛出异常。
throws：用于声明方法可能抛出的异常类型。
transient：用于指定不需要序列化的实例变量。
try：异常处理的起始块。
void：表示方法不返回任何值。
volatile：用于修饰变量，表示该变量可能会被多个线程同时访问而不进行同步。
while：循环结构。

保留字: (现在不是关键字, 将来某一天, 会被提升为关键字的存在)